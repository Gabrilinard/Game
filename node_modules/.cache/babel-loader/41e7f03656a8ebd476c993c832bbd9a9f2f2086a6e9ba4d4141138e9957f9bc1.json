{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\AppData\\\\Roaming\\\\SecretWord\\\\secretword\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport StartScreen from './components/StartScreen';\nimport { useCallback, useEffect, useState } from 'react';\nimport { wordsList } from \"./data/words\";\nimport Game from './components/Game';\nimport GameOver from './components/GameOver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stages = [{\n  id: 1,\n  name: \"start\"\n}, {\n  id: 2,\n  name: \"game\"\n}, /*Array com cada estágio declarado.*/\n{\n  id: 3,\n  name: \"end\"\n}];\nfunction App() {\n  _s();\n  const [gameStage, setGameStage] = useState(stages[0].name); /*Ele começa no estágio. Crio duas variáveis para fazer o código e a lógica.*/\n  const [words] = useState(wordsList);\n  const [pickedWord, setPickedWord] = useState(\"\");\n  const [pickedCategory, setPickedCategory] = useState(\"\");\n  const [letters, setLetters] = useState;\n  const startGame = () => {\n    setGameStage(stages[1].name); /*Quando a pessoa aperta no botão ele passa para o estágio 1.*/\n  };\n\n  const verifyLetter = () => {\n    setGameStage(stages[2].name); /*Verificando as letras do input*/\n  };\n\n  const retry = () => {\n    setGameStage(stages[0].name); /*Função para resetar o jogo*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [gameStage === \"start\" && /*#__PURE__*/_jsxDEV(StartScreen, {\n      startGame: startGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }, this), gameStage === \"game\" && /*#__PURE__*/_jsxDEV(Game, {\n      verifyLetter: verifyLetter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 32\n    }, this), gameStage === \"end\" && /*#__PURE__*/_jsxDEV(GameOver, {\n      retry: retry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Zzd43W5lWINBHJDInZLITSWVfuw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["StartScreen","useCallback","useEffect","useState","wordsList","Game","GameOver","jsxDEV","_jsxDEV","stages","id","name","App","_s","gameStage","setGameStage","words","pickedWord","setPickedWord","pickedCategory","setPickedCategory","letters","setLetters","startGame","verifyLetter","retry","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gabri/AppData/Roaming/SecretWord/secretword/src/App.js"],"sourcesContent":["import './App.css';\nimport StartScreen from './components/StartScreen';\nimport { useCallback, useEffect, useState } from 'react';\nimport { wordsList } from \"./data/words\";\nimport Game from './components/Game';\nimport GameOver from './components/GameOver'\n\nconst stages = [\n  {id: 1, name: \"start\"},\n  {id: 2, name: \"game\"},      /*Array com cada estágio declarado.*/\n  {id: 3, name: \"end\"},\n]\n\nfunction App() {\n  const [gameStage, setGameStage] = useState(stages[0].name) /*Ele começa no estágio. Crio duas variáveis para fazer o código e a lógica.*/\n  const [words] = useState(wordsList)\n\n  const [pickedWord, setPickedWord] = useState(\"\")\n  const [pickedCategory, setPickedCategory] = useState(\"\")\n  const [letters, setLetters] = useState\n\n  const startGame = () => {\n    setGameStage(stages[1].name)  /*Quando a pessoa aperta no botão ele passa para o estágio 1.*/\n  }\n\n  const verifyLetter = () => {\n    setGameStage(stages[2].name)   /*Verificando as letras do input*/\n  }\n\n  const retry = () => {\n    setGameStage(stages[0].name) /*Função para resetar o jogo*/\n  }\n\n  return (\n    <div className=\"App\">\n      {gameStage === \"start\" && <StartScreen startGame={startGame} />}\n      {gameStage === \"game\" && <Game verifyLetter={verifyLetter}/>}\n      {gameStage === \"end\" && <GameOver retry={retry}/>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,WAAW,MAAM,0BAA0B;AAClD,SAASC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,QAAQ,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,MAAM,GAAG,CACb;EAACC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAO,CAAC,EACtB;EAACD,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAM,CAAC,EAAO;AAC5B;EAACD,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAK,CAAC,CACrB;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAACM,MAAM,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,EAAC;EAC3D,MAAM,CAACK,KAAK,CAAC,GAAGb,QAAQ,CAACC,SAAS,CAAC;EAEnC,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ;EAEtC,MAAMoB,SAAS,GAAGA,CAAA,KAAM;IACtBR,YAAY,CAACN,MAAM,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,EAAE;EAChC,CAAC;;EAED,MAAMa,YAAY,GAAGA,CAAA,KAAM;IACzBT,YAAY,CAACN,MAAM,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,EAAG;EACjC,CAAC;;EAED,MAAMc,KAAK,GAAGA,CAAA,KAAM;IAClBV,YAAY,CAACN,MAAM,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,EAAC;EAC/B,CAAC;;EAED,oBACEH,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,GACjBb,SAAS,KAAK,OAAO,iBAAIN,OAAA,CAACR,WAAW;MAACuB,SAAS,EAAEA;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9DjB,SAAS,KAAK,MAAM,iBAAIN,OAAA,CAACH,IAAI;MAACmB,YAAY,EAAEA;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAC3DjB,SAAS,KAAK,KAAK,iBAAIN,OAAA,CAACF,QAAQ;MAACmB,KAAK,EAAEA;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV;AAAClB,EAAA,CA3BQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}