{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\AppData\\\\Roaming\\\\SecretWord\\\\secretword\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  verifyLetter,\n  pickedWord,\n  pickedCategory,\n  letters,\n  guessedLetters,\n  wrongLetters,\n  guesses,\n  score\n}) => {\n  _s();\n  const [letter, setLetter] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"points\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Pontua\\xE7\\xE3o: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Adivinhe a palavra:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"tip\",\n      children: [\"Dica sobre a palavra: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: pickedCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Voc\\xEA ainda tem \", guesses, \" tentativas(s).\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wordContainer\",\n      children: letters.map((letter, i) => guessedLetters.includes(letter) ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"letter\",\n        children: letter\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"blankSquare\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"letterContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tente adivinhar uma letra da palavra:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"letter\",\n          maxLength: \"1\",\n          required: true,\n          onChange: e => setLetter(e.target.value),\n          value: letter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Jogar!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrongLettersContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Letras j\\xE1 utilizadas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), wrongLetters.map((letter, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [letter, \", \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"Ec3xa/mzG26E/6SQA6dx/R/IsM8=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Game","verifyLetter","pickedWord","pickedCategory","letters","guessedLetters","wrongLetters","guesses","score","_s","letter","setLetter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","i","includes","onSubmit","handleSubmit","type","name","maxLength","required","onChange","e","target","value","_c","$RefreshReg$"],"sources":["C:/Users/gabri/AppData/Roaming/SecretWord/secretword/src/components/Game.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './Game.css'\n\nconst Game = ({verifyLetter, pickedWord, pickedCategory, letters, guessedLetters, wrongLetters, guesses , score}) => {\n\n    const [letter, setLetter] = useState(\"\")\n\n    \n\n  return (\n    <div className='game'>\n        <p className='points'>\n        <span>Pontuação: {score}</span>\n        </p>\n        <h1>Adivinhe a palavra:</h1>\n        <h3 className='tip'>\n            Dica sobre a palavra: <span>{pickedCategory}</span>\n        </h3>\n\n        <p>Você ainda tem {guesses} tentativas(s).</p>\n\n        <div className=\"wordContainer\">\n\n            {letters.map((letter, i) => (\n                guessedLetters.includes(letter) ? (\n                    <span key= {i} className=\"letter\">{letter}</span>\n                ) : (\n                    <span key= {i} className=\"blankSquare\"></span>\n                )\n            ))}\n        </div>\n\n        <div className=\"letterContainer\">\n            <p>Tente adivinhar uma letra da palavra:</p>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name='letter' maxLength= \"1\" required onChange={(e) => setLetter(e.target.value)} value={letter}/>\n                <button>Jogar!</button>\n            </form>\n        </div>\n\n        <div className=\"wrongLettersContainer\">\n            <p>Letras já utilizadas:</p>\n            {wrongLetters.map((letter, i) => (\n                <span key={i}>{letter}, </span>\n            ))}\n        </div>\n    </div>\n  )\n}\n\nexport default Game"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}